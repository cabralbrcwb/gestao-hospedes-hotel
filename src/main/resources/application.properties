# Application Name
spring.application.name=belavista-backend

# Database Connection
spring.datasource.url=jdbc:postgresql://localhost:5432/belavista
spring.datasource.username=postgres
spring.datasource.password=admin

# JPA/Hibernate Configuration
#Primeira execução Use 'create' para garantir um schema limpo e sincronizado em desenvolvimento.
# para executar o componente DataInitializer.

#spring.jpa.hibernate.ddl-auto=create
# Use 'update' para manter os dados existente e atualizar o schema.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Server Port
server.port=8080

# Message Source Configuration
spring.messages.basename=messages

# Logging Configuration
logging.level.br.com.senior.gestaohospedes.belavista=DEBUG

# JWT Secret Key
# IMPORTANTE: Em um ambiente de produção, este valor deve ser gerenciado de forma segura,
# por exemplo, através de variáveis de ambiente.
api.security.token.secret=belavista-super-secret-key-para-desenvolvimento
